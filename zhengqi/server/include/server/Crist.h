// Generated by gencpp from file client/Crist.msg
// DO NOT EDIT!


#ifndef CLIENT_MESSAGE_CRIST_H
#define CLIENT_MESSAGE_CRIST_H

#include <ros/service_traits.h>


#include <client/CristRequest.h>
#include <client/CristResponse.h>


namespace client
{

struct Crist
{

typedef CristRequest Request;
typedef CristResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Crist
} // namespace client


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::client::Crist > {
  static const char* value()
  {
    return "7bcae82d9c56d7e11c9ed0787b32d9b5";
  }

  static const char* value(const ::client::Crist&) { return value(); }
};

template<>
struct DataType< ::client::Crist > {
  static const char* value()
  {
    return "client/Crist";
  }

  static const char* value(const ::client::Crist&) { return value(); }
};


// service_traits::MD5Sum< ::client::CristRequest> should match
// service_traits::MD5Sum< ::client::Crist >
template<>
struct MD5Sum< ::client::CristRequest>
{
  static const char* value()
  {
    return MD5Sum< ::client::Crist >::value();
  }
  static const char* value(const ::client::CristRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::client::CristRequest> should match
// service_traits::DataType< ::client::Crist >
template<>
struct DataType< ::client::CristRequest>
{
  static const char* value()
  {
    return DataType< ::client::Crist >::value();
  }
  static const char* value(const ::client::CristRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::client::CristResponse> should match
// service_traits::MD5Sum< ::client::Crist >
template<>
struct MD5Sum< ::client::CristResponse>
{
  static const char* value()
  {
    return MD5Sum< ::client::Crist >::value();
  }
  static const char* value(const ::client::CristResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::client::CristResponse> should match
// service_traits::DataType< ::client::Crist >
template<>
struct DataType< ::client::CristResponse>
{
  static const char* value()
  {
    return DataType< ::client::Crist >::value();
  }
  static const char* value(const ::client::CristResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CLIENT_MESSAGE_CRIST_H
